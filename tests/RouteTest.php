<?php

namespace pachel\Light\Tests;

use Pachel\Light\src\Light;
use Pachel\Light\src\Models\Route;
use PHPUnit\Framework\TestCase;

class RouteTest extends TestCase
{
    /**
     * @var Route $route
     */
    public $route;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->route = new Route();
    }

    /**
     * @covers \Pachel\Light\src\Models\Route::addView
     * @return void
     */
    public function testAddView()
    {
        $this->route->addView("json");
        self::assertEquals("JSON", $this->route->getView(), "A json view mindig nagybetÅ±s kell hogy leyen!");
        $this->route->addView("csv");
        self::assertEquals("CSV", $this->route->getView(), "A csv view mindig nagybetÅ±s kell hogy leyen!");
    }

    /**
     * @covers \Pachel\Light\src\Models\Route::addMethods
     * @return void
     */
    public function testAddMethods()
    {
        $this->route->addMethods("get");
        $mets = $this->route->getMethods();
        self::assertEquals(1,count($mets));

        $this->route->addMethods("get|post");
        $mets = $this->route->getMethods();
        self::assertEquals(2,count($mets));

        $this->route->addMethods("get|post|ajax");
        $mets = $this->route->getMethods();
        self::assertEquals(3,count($mets));

        $this->route->addMethods("webonly");
        $mets = $this->route->getMethods();
        self::assertEquals(3,count($mets));

        self::assertTrue(in_array("GET",$mets));
        self::assertTrue(in_array("POST",$mets));
        self::assertTrue(in_array("XHR",$mets));

        $this->route->addMethods("get");
        $mets = $this->route->getMethods();
        self::assertFalse(in_array("POST",$mets));
        self::assertFalse(in_array("XHR",$mets));
    }

    /**
     * @covers \Pachel\Light\src\Models\Route::run
     * @return void
     */
    public function testCodeRunner(){

        $app = Light::instance(["ui"=>__DIR__."/../example/ui/","url"=>"asdas"]);
        $this->route->addCode(function (){
            return 1;
        });
        $run = $this->route->run();
        self::assertEquals(1,$run);
    }
}